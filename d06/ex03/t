
<- Vector ----------------------------------------------------------------------
Matrix class handles transformation in homogeneous coordinates.

Constructor wait for an array with 'preset' key which contains the type of the matrix
defined in constant values of the class.
new Vertex( array( 'preset' => Self::type);

if 'preset key' equals to Self::IDENTITY then no additional arguments need;
if 'preset key' equals to Self::SCALE then 'scale' key which defines the scale coefficient required;
if 'preset key' equals to Self::RX|Self::RY|Self::RZ then 'angle' key which defines the rotation angle
around the corresponding axis required;
if 'preset key' equals to Self::TRANSLATION then 'vtc' key which defines the Vector
containing the transformation coordinates required;
if 'preset key' equals to Self::PROJECTION then the following keys are required:
'fov': field of view in degrees;
'ratio': projected image ratio;
'near': projection's near clipping plane;
'far': projection's far clipping plane;

The class provides the following methods :

float getElement($column, $row):
Returns element in the specified column and row.

Matrix mult( Matrix $rhs ):
Returns the multiplication of both matrices

Vertex transformVertex( Vertex $vtx ): 
returns a new vertex resulting from the transformation of the vertex by the matrix.
---------------------------------------------------------------------- Vector ->
Let's start with an harmless identity matrix :
Matrix IDENTITY instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


So far, so good. Let's create a translation matrix now.
Matrix TRANSLATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 20.00
y | 0.00 | 1.00 | 0.00 | 20.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


A scale matrix is no big deal.
Matrix SCALE preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 10.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 10.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 10.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


A Rotation along the OX axis :
Matrix Ox ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 0.71 | -0.71 | 0.00
z | 0.00 | 0.71 | 0.71 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


Or along the OY axis :
Matrix Oy ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 1.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | -1.00 | 0.00 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


Do a barrel roll !
Matrix Oz ROTATION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | -0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


The bad guy now, the projection matrix : 3D to 2D !
The values are arbitray. We'll decipher them in the next exercice.
Matrix PROJECTION preset instance constructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.30 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.73 | 0.00 | 0.00
z | 0.00 | 0.00 | -0.96 | -1.96
w | 0.00 | 0.00 | -1.00 | 0.00


Matrices are so awesome, that they can be combined !
This is a model matrix that scales, then rotates around OY axis,
then rotates around OX axis and finally translates.
Please note the reverse operations order. It's not an error.
Matrix instance destructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


What can you do with a matrix and a vertex ?
Vertex( x: 1.00, y: 1.00, z:0.00, w:1.00 )
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

Transform the damn vertex !
Vertex( x: 20.00, y: 34.14, z:-0.00, w:1.00 )


<- Vector ----------------------------------------------------------------------
Matrix class handles transformation in homogeneous coordinates.

Constructor wait for an array with 'preset' key which contains the type of the matrix
defined in constant values of the class.
new Vertex( array( 'preset' => Self::type);

if 'preset key' equals to Self::IDENTITY then no additional arguments need;
if 'preset key' equals to Self::SCALE then 'scale' key which defines the scale coefficient required;
if 'preset key' equals to Self::RX|Self::RY|Self::RZ then 'angle' key which defines the rotation angle
around the corresponding axis required;
if 'preset key' equals to Self::TRANSLATION then 'vtc' key which defines the Vector
containing the transformation coordinates required;
if 'preset key' equals to Self::PROJECTION then the following keys are required:
'fov': field of view in degrees;
'ratio': projected image ratio;
'near': projection's near clipping plane;
'far': projection's far clipping plane;

The class provides the following methods :

float getElement($column, $row):
Returns element in the specified column and row.

Matrix mult( Matrix $rhs ):
Returns the multiplication of both matrices

Vertex transformVertex( Vertex $vtx ): 
returns a new vertex resulting from the transformation of the vertex by the matrix.
---------------------------------------------------------------------- Vector ->
Let's start with an harmless identity matrix :
Matrix IDENTITY instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


So far, so good. Let's create a translation matrix now.
Matrix TRANSLATION preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 20.00
y | 0.00 | 1.00 | 0.00 | 20.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


A scale matrix is no big deal.
Matrix SCALE preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 10.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 10.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 10.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


A Rotation along the OX axis :
Matrix Ox ROTATION preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | 0.00 | 0.71 | -0.71 | 0.00
z | 0.00 | 0.71 | 0.71 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


Or along the OY axis :
Matrix Oy ROTATION preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 1.00 | 0.00
y | 0.00 | 1.00 | 0.00 | 0.00
z | -1.00 | 0.00 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


Do a barrel roll !
Matrix Oz ROTATION preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.00 | 0.00 | 0.00 | 0.00
y | -0.00 | 1.00 | 0.00 | 0.00
z | 0.00 | 0.00 | 1.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


The bad guy now, the projection matrix : 3D to 2D !
The values are arbitray. We'll decipher them in the next exercice.
Matrix PROJECTION preset instance constructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 1.30 | 0.00 | 0.00 | 0.00
y | 0.00 | 1.73 | 0.00 | 0.00
z | 0.00 | 0.00 | -0.96 | -1.96
w | 0.00 | 0.00 | -1.00 | 0.00


Matrices are so awesome, that they can be combined !
This is a model matrix that scales, then rotates around OY axis,
then rotates around OX axis and finally translates.
Please note the reverse operations order. It's not an error.
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00


What can you do with a matrix and a vertex ?
Vertex( x: 1.00, y: 1.00, z:0.00, w:1.00 )
M | vtcX | vtcY | vtcZ | vtxO
-----------------------------
x | 0.00 | 0.00 | 10.00 | 20.00
y | 7.07 | 7.07 | -0.00 | 20.00
z | -7.07 | 7.07 | 0.00 | 0.00
w | 0.00 | 0.00 | 0.00 | 1.00

Transform the damn vertex !
Vertex( x: 20.00, y: 34.14, z:-0.00, w:1.00 )

Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
Matrix instance destructed
